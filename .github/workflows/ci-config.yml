name: CI Config

on:
  workflow_call:
    inputs:
      config-path:       
        type: string
        default: '.github-ci.yml'      
    secrets:
      token:
        required: true

jobs:
  parse-config:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
    - name: Read config as properties
      id: read-props
      uses: mikefarah/yq@master
      with:
        cmd: yq -o=props '... comments = ""' ${{ inputs.config-path }}
       
    - name: Set GitHub output
      id: set-github-output
      run: |
          echo "test=WorkTest" >> "$GITHUB_OUTPUT" 
          mapfile -t arr <<< "${{ steps.read-props.outputs.result }}" 
          for propAndValue in "${arr[@]}"
            do
              # Copy the string up to the character =
              prop="${propAndValue%% =*}"

              # Trim the result
              propTrim="${prop#"${prop%%[![:space:]]*}"}"
              propTrim="${propTrim%"${propTrim##*[![:space:]]}"}"
  
              # Replace '.' with '-'
              # This is to avoid issues with GitHub output
              propTrim=${propTrim//./-}

              # Get the value after the character = 
              value="${propAndValue#*=}"

              # Trim the result
              valueTrim="${value#"${value%%[![:space:]]*}"}"
              valueTrim="${valueTrim%"${valueTrim##*[![:space:]]}"}"
  
              echo PropValue: $propAndValue
              echo Prop: $propTrim
              echo Value: $valueTrim
              echo "$propTrim=$valueTrim" >> "$GITHUB_OUTPUT"
            done

    - name: Show GitHub output
      run: echo "${{ toJson(steps.set-github-output.outputs) }}"

    - name: Show all output
      run: echo "$GITHUB_OUTPUT"

    - name: Show specific output
      run: echo "${{ steps.set-github-output.outputs.app-build-version }}"

    - name: Show specific output 02
      run: echo "${{ steps.set-github-output.outputs.test }}"