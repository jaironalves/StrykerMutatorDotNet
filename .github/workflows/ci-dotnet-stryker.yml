name: CI DotNet Stryker

on:
  workflow_call:
    inputs:
      pr-comment-mark:       
        type: string
        description: 'String to mark the PR comment'
        default: 'Stryker-Mutation-Comment'
      results-directory:
        type: string
        description: 'Directory to store results'
        required: false
        default: 'stryker-results'

jobs:
  stryker-run:
    runs-on: ubuntu-latest    
    defaults:
      run:
        working-directory: app
    env:
        stryker-results: ${{ github.workspace }}/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Install Stryker
        run: dotnet tool install -g dotnet-stryker --version 3.13.2

      - name: Create Results Folder
        id: results-folder
        run: |
          mkdir -p ${{ github.workspace }}/stryker-results/reports

          echo "path=${{ github.workspace }}/stryker-results/" >> $GITHUB_OUTPUT
          echo "path-file-log=${{ github.workspace }}/stryker-results/stryker.log" >> $GITHUB_OUTPUT
          echo "path-file-summary-table=${{ github.workspace }}/stryker-results/mutation-report-summary-table.md" >> $GITHUB_OUTPUT

          echo "path-reports=${{ github.workspace }}/stryker-results/reports/" >> $GITHUB_OUTPUT
          echo "path-reports-file-md=${{ github.workspace }}/stryker-results/reports/mutation-report.md" >> $GITHUB_OUTPUT

      - name: Run Stryker        
        run: dotnet stryker -V debug | tee ${{ github.workspace }}/stryker-results/stryker.log

      - name: Move Mutation Reports
        run: |         
         mv ./StrykerOutput/*/reports/*.* ${{ github.workspace }}/stryker-results/reports/

      - name: Check Mutation Report Markdown
        id: check-report-md
        run: |
          if [ -f ${{ github.workspace }}/stryker-results/reports/mutation-report.md ]; then
            echo "O arquivo mutation-report.md existe."
            echo "result=true" >> $GITHUB_OUTPUT            
          else
            echo "O arquivo mutation-report.md nÃ£o existe."
          fi 
      
      - name: Extract Mutation Report Markdown Summary Table
        id: report-md-extract-summary-table
        if: steps.check-report-md.outputs.result == 'true'
        run: |
          file="${{ github.workspace }}/stryker-results/reports/mutation-report.md"
          file_result="${{ github.workspace }}/stryker-results/reports/mutation-report-summary-table.md"

          table_content=$(sed -n '/# Mutation Testing Summary/,/## The final mutation score is/ {/^|/p}' "$file")
          echo "$table_content" > "$file_result"
          cat "$file_result"

      - name: Capture Mutation Score
        id: capture-mutation-score
        run: |
          file="${{ github.workspace }}/stryker-results/stryker.log"
          line=$(grep "The final mutation score is" "$file")
          mutation_score=$(echo "$line" | awk '{print $8}')
          echo "MUTATION_SCORE=$mutation_score" >> $GITHUB_ENV
  
      - name: Capture Options Threshold
        id: capture-options-threshold
        run: |
          file="${{ github.workspace }}/stryker-results/stryker.log"
          json=$(grep "\[.*\] Stryker started with options:" "$file" | sed 's/.*options: //' | sed 's/^[ \t]*//;s/[ \t]*$//')
          if [ -z "$json" ]; then
            threshold_high=80
            threshold_low=60
            threshold_break=0
          else        
            threshold_high=$(echo "$json" | jq '.Thresholds.High // 80')
            threshold_low=$(echo "$json" | jq '.Thresholds.Low // 60')
            threshold_break=$(echo "$json" | jq '.Thresholds.Break // 0')
          fi
          echo "THRESHOLD_HIGH=$threshold_high" >> $GITHUB_ENV
          echo "THRESHOLD_LOW=$threshold_low" >> $GITHUB_ENV
          echo "THRESHOLD_BREAK=$threshold_break" >> $GITHUB_ENV

      - name: Show Mutation Score
        run: |
          echo "Mutation Score: $MUTATION_SCORE"
          echo "Threshold High: $THRESHOLD_HIGH"
          echo "Threshold Low: $THRESHOLD_LOW"
          echo "Threshold Break: $THRESHOLD_BREAK"

      - name: Create Stryker Json Result
        run: |
          file-output="${{ github.workspace }}/stryker-results/stryker.json"
          echo "{
            \"mutation_score\": \"$MUTATION_SCORE\",
            \"threshold_high\": \"$THRESHOLD_HIGH\",
            \"threshold_low\": \"$THRESHOLD_LOW\",
            \"threshold_break\": \"$THRESHOLD_BREAK\"
          }" > "$file-output"
          ls -la ${{ github.workspace }}/stryker-results
        
      - name: Upload Stryker Results        
        uses: actions/upload-artifact@v4        
        with:
          name: stryker-results
          path: ${{ github.workspace }}/stryker-results/

      - uses: jwalton/gh-find-current-pr@v1
        id: finder

      - name: Create Comment
        id: create-comment-path
        run: |
          cat ./stryker-results/reports/mutation-report.md
       
      - name: Get Comments JSON
        run: gh pr view ${{ steps.finder.outputs.pr }} -c --json comments > comments.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
 
      - name: Try Get PR Comment Current
        id: try-get-pr-comment-current
        run: |
          comment_body=$(jq -r '.comments[] | select(.body | contains("<!-- ${{ inputs.pr-comment-mark }} -->")) | .body' comments.json)
          if [ -n "$comment_body" ]; then
            echo "Stryker PR Comment exists."
            echo "result=true" >> $GITHUB_OUTPUT
            echo "$comment_body" > ./stryker-results/pr-comment-current.md
            cat ./stryker-results/pr-comment-current.md
          else
            echo "No Stryker PR comment found."
            echo "result=false" >> $GITHUB_OUTPUT
          fi
            
      - name: Extract History Section
        if: steps.try-get-pr-comment-current.outputs.result == 'true'
        run: |
          file="./stryker-results/pr-comment-current.md"
          history_table=$(sed -n '/<!--HISTORY-->/, /<!--HISTORY-END-->/ { //!p; }' "$file")
          echo "$history_table" > ./stryker-results/pr-comment-current-history.md
          cat ./stryker-results/pr-comment-current-history.md

      - name: Extract Issue Comment Number
        run: |
          url=$(jq -r '.comments[] | select(.body | contains("<!-- Stryker-Mutation-Comment -->")) | .url' comments.json)
          comment_id=$(echo $url | sed -n 's/.*#issuecomment-\([0-9]*\).*/\1/p')
          echo "Comment ID: $comment_id"
          echo "comment_id=$comment_id" >> $GITHUB_ENV
